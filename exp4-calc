import React, { useState } from "react";

function App() {
  const [input, setInput] = useState("");

  const handleClick = (value) => {
    setInput((prev) => prev + value);
  };

  const clearInput = () => {
    setInput("");
  };

  const calculateResult = () => {
    try {
      setInput(eval(input).toString()); // Evaluates the expression
    } catch (error) {
      setInput("Error");
    }
  };

  return (
    <div style={styles.calculator}>
      <h2>React Calculator</h2>
      <input type="text" value={input} readOnly style={styles.input} />
      <div style={styles.buttons}>
        {["7", "8", "9", "/", "4", "5", "6", "*", "1", "2", "3", "-", "0", ".", "=", "+"].map(
          (btn) =>
            btn === "=" ? (
              <button key={btn} onClick={calculateResult} style={{ ...styles.button, ...styles.equal }}>
                {btn}
              </button>
            ) : (
              <button key={btn} onClick={() => handleClick(btn)} style={styles.button}>
                {btn}
              </button>
            )
        )}
        <button onClick={clearInput} style={{ ...styles.button, ...styles.clear }}>C</button>
      </div>
    </div>
  );
}

// Internal CSS styles
const styles = {
  calculator: {
    background: "white",
    padding: "20px",
    borderRadius: "10px",
    boxShadow: "0 0 10px gray",
    textAlign: "center",
    maxWidth: "250px",
    margin: "auto",
  },
  input: {
    width: "100%",
    height: "40px",
    fontSize: "18px",
    textAlign: "right",
    marginBottom: "10px",
    padding: "5px",
    border: "1px solid #ccc",
    borderRadius: "5px",
  },
  buttons: {
    display: "grid",
    gridTemplateColumns: "repeat(4, 1fr)",
    gap: "10px",
  },
  button: {
    padding: "15px",
    fontSize: "18px",
    border: "none",
    cursor: "pointer",
    borderRadius: "5px",
    background: "#007bff",
    color: "white",
    transition: "0.3s",
  },
  clear: {
    gridColumn: "span 2",
    background: "red",
  },
  equal: {
    background: "green",
  },
};

export default App;
